import{_ as t,c as o,o as r,a4 as e}from"./chunks/framework.4aTu-Nia.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/00 创作中/特征工程.md","filePath":"docs/00 创作中/特征工程.md"}'),a={name:"docs/00 创作中/特征工程.md"},n=e('<p><strong>特征工程（Feature Engineering）</strong> 是机器学习中用于提高模型性能的重要环节，主要涉及特征的创建、转换、选择和优化。以下是常见的特征工程方法：</p><hr><h3 id="_1-特征创建-feature-creation" tabindex="-1"><strong>1. 特征创建（Feature Creation）</strong> <a class="header-anchor" href="#_1-特征创建-feature-creation" aria-label="Permalink to &quot;**1. 特征创建（Feature Creation）**&quot;">​</a></h3><h4 id="_1-统计特征" tabindex="-1"><strong>(1) 统计特征</strong> <a class="header-anchor" href="#_1-统计特征" aria-label="Permalink to &quot;**(1) 统计特征**&quot;">​</a></h4><ul><li><strong>均值、方差、标准差、中位数</strong>：如用户历史订单的平均金额、标准差等。</li><li><strong>最大值、最小值、四分位数</strong>：用于分析数据的分布情况。</li><li><strong>计数特征</strong>：如某用户在某一时间段内的购买次数。</li></ul><h4 id="_2-组合特征" tabindex="-1"><strong>(2) 组合特征</strong> <a class="header-anchor" href="#_2-组合特征" aria-label="Permalink to &quot;**(2) 组合特征**&quot;">​</a></h4><ul><li><strong>加法、减法、乘法、除法</strong>：如 <code>单位时间内消费金额 = 总金额 / 交易次数</code>。</li><li><strong>交互特征</strong>：如 <code>用户年龄 × 购买频次</code>，表示年龄与购买习惯的关系。</li></ul><h4 id="_3-时间特征" tabindex="-1"><strong>(3) 时间特征</strong> <a class="header-anchor" href="#_3-时间特征" aria-label="Permalink to &quot;**(3) 时间特征**&quot;">​</a></h4><ul><li><strong>时间戳转换</strong>：从 <code>YYYY-MM-DD HH:MM:SS</code> 提取 <code>小时、星期、月份、季度</code> 等。</li><li><strong>时间差特征</strong>：如 <code>当前时间 - 上次登录时间</code>，表示用户活跃度。</li><li><strong>周期特征</strong>：如 <code>小时数 % 24</code>（一天的周期），<code>天数 % 7</code>（一周的周期）。</li></ul><h4 id="_4-目标编码-target-encoding" tabindex="-1"><strong>(4) 目标编码（Target Encoding）</strong> <a class="header-anchor" href="#_4-目标编码-target-encoding" aria-label="Permalink to &quot;**(4) 目标编码（Target Encoding）**&quot;">​</a></h4><ul><li>用目标变量的均值或其他统计信息来编码类别变量，比如 <code>类别 A 的点击率 = 该类别点击次数 / 总点击次数</code>。</li></ul><hr><h3 id="_2-特征转换-feature-transformation" tabindex="-1"><strong>2. 特征转换（Feature Transformation）</strong> <a class="header-anchor" href="#_2-特征转换-feature-transformation" aria-label="Permalink to &quot;**2. 特征转换（Feature Transformation）**&quot;">​</a></h3><h4 id="_1-数据标准化-归一化" tabindex="-1"><strong>(1) 数据标准化 &amp; 归一化</strong> <a class="header-anchor" href="#_1-数据标准化-归一化" aria-label="Permalink to &quot;**(1) 数据标准化 &amp; 归一化**&quot;">​</a></h4><ul><li><strong>标准化（Z-Score 标准化）</strong>： x′=x−μσx&#39; = \\frac{x - \\mu}{\\sigma}x′=σx−μ​ 使数据符合均值为 0，方差为 1 的正态分布。</li><li><strong>归一化（Min-Max 归一化）</strong>： x′=x−min⁡(x)max⁡(x)−min⁡(x)x&#39; = \\frac{x - \\min(x)}{\\max(x) - \\min(x)}x′=max(x)−min(x)x−min(x)​ 将数据缩放到 [0,1] 或 [-1,1] 之间，适用于神经网络。</li></ul><h4 id="_2-离散化-binning" tabindex="-1"><strong>(2) 离散化（Binning）</strong> <a class="header-anchor" href="#_2-离散化-binning" aria-label="Permalink to &quot;**(2) 离散化（Binning）**&quot;">​</a></h4><ul><li><strong>等频分箱</strong>：将数据按频率等分，如把年龄分成 <code>[0-18, 19-35, 36-50, 50+]</code> 四组。</li><li><strong>等距分箱</strong>：按数值范围等间隔划分，如 <code>[0-100, 100-200, 200-300]</code>。</li><li><strong>决策树分箱</strong>：使用决策树自动划分最优区间。</li></ul><h4 id="_3-对数变换-log-transform" tabindex="-1"><strong>(3) 对数变换（Log Transform）</strong> <a class="header-anchor" href="#_3-对数变换-log-transform" aria-label="Permalink to &quot;**(3) 对数变换（Log Transform）**&quot;">​</a></h4><ul><li>适用于 <strong>偏态分布数据</strong>（如收入、点击率），使用 <code>log(x+1)</code> 让数据更接近正态分布。</li></ul><h4 id="_4-多项式特征" tabindex="-1"><strong>(4) 多项式特征</strong> <a class="header-anchor" href="#_4-多项式特征" aria-label="Permalink to &quot;**(4) 多项式特征**&quot;">​</a></h4><ul><li>对数值特征进行 <strong>二次、三次方扩展</strong>，如 <code>x</code> 变为 <code>[x, x^2, x^3]</code>，增加模型复杂度。</li></ul><hr><h3 id="_3-特征编码-feature-encoding" tabindex="-1"><strong>3. 特征编码（Feature Encoding）</strong> <a class="header-anchor" href="#_3-特征编码-feature-encoding" aria-label="Permalink to &quot;**3. 特征编码（Feature Encoding）**&quot;">​</a></h3><h4 id="_1-类别变量编码" tabindex="-1"><strong>(1) 类别变量编码</strong> <a class="header-anchor" href="#_1-类别变量编码" aria-label="Permalink to &quot;**(1) 类别变量编码**&quot;">​</a></h4><ul><li><strong>独热编码（One-Hot Encoding）</strong>：将类别变量转换成 0/1 向量，如 <code>[&#39;红&#39;, &#39;绿&#39;, &#39;蓝&#39;]</code> 变为 <code>[1,0,0]</code>、<code>[0,1,0]</code>、<code>[0,0,1]</code>。</li><li><strong>标签编码（Label Encoding）</strong>：把类别转为数字，如 <code>[&#39;红&#39;, &#39;绿&#39;, &#39;蓝&#39;] → [0, 1, 2]</code>。</li><li><strong>频次编码（Frequency Encoding）</strong>：类别变量的出现次数，如 <code>某城市的订单量占比</code>。</li></ul><h4 id="_2-词向量编码" tabindex="-1"><strong>(2) 词向量编码</strong> <a class="header-anchor" href="#_2-词向量编码" aria-label="Permalink to &quot;**(2) 词向量编码**&quot;">​</a></h4><ul><li><strong>TF-IDF</strong>：常用于文本数据，计算词频和逆文档频率。</li><li><strong>Word2Vec / BERT</strong>：将文本转换成词向量，提高语义理解能力。</li></ul><hr><h3 id="_4-特征选择-feature-selection" tabindex="-1"><strong>4. 特征选择（Feature Selection）</strong> <a class="header-anchor" href="#_4-特征选择-feature-selection" aria-label="Permalink to &quot;**4. 特征选择（Feature Selection）**&quot;">​</a></h3><h4 id="_1-过滤法-filter-method" tabindex="-1"><strong>(1) 过滤法（Filter Method）</strong> <a class="header-anchor" href="#_1-过滤法-filter-method" aria-label="Permalink to &quot;**(1) 过滤法（Filter Method）**&quot;">​</a></h4><ul><li><strong>方差选择</strong>：去掉方差低的特征（几乎恒定值）。</li><li><strong>相关性分析（Correlation）</strong>：剔除与目标变量无关或多重共线性的特征。</li><li><strong>卡方检验（Chi-square Test）</strong>：用于评估类别特征与目标变量的关系。</li></ul><h4 id="_2-包装法-wrapper-method" tabindex="-1"><strong>(2) 包装法（Wrapper Method）</strong> <a class="header-anchor" href="#_2-包装法-wrapper-method" aria-label="Permalink to &quot;**(2) 包装法（Wrapper Method）**&quot;">​</a></h4><ul><li><strong>递归特征消除（RFE）</strong>：不断移除对模型贡献较小的特征。</li><li><strong>穷举搜索</strong>：使用不同的特征子集，选择表现最好的组合。</li></ul><h4 id="_3-嵌入法-embedded-method" tabindex="-1"><strong>(3) 嵌入法（Embedded Method）</strong> <a class="header-anchor" href="#_3-嵌入法-embedded-method" aria-label="Permalink to &quot;**(3) 嵌入法（Embedded Method）**&quot;">​</a></h4><ul><li><strong>L1 正则化（Lasso 回归）</strong>：自动筛选特征。</li><li><strong>决策树 / XGBoost 特征重要性</strong>：利用模型自带的重要性评分来选择特征。</li></ul><hr><h3 id="_5-特征降维-feature-dimensionality-reduction" tabindex="-1"><strong>5. 特征降维（Feature Dimensionality Reduction）</strong> <a class="header-anchor" href="#_5-特征降维-feature-dimensionality-reduction" aria-label="Permalink to &quot;**5. 特征降维（Feature Dimensionality Reduction）**&quot;">​</a></h3><h4 id="_1-pca-主成分分析" tabindex="-1"><strong>(1) PCA（主成分分析）</strong> <a class="header-anchor" href="#_1-pca-主成分分析" aria-label="Permalink to &quot;**(1) PCA（主成分分析）**&quot;">​</a></h4><ul><li>通过线性变换减少特征维度，如 <code>100 维 → 10 维</code>，同时保持最大信息量。</li></ul><h4 id="_2-t-sne-umap" tabindex="-1"><strong>(2) t-SNE / UMAP</strong> <a class="header-anchor" href="#_2-t-sne-umap" aria-label="Permalink to &quot;**(2) t-SNE / UMAP**&quot;">​</a></h4><ul><li>用于高维数据的可视化，比如 <code>784 维的图片数据 → 2 维</code>，以便绘制散点图。</li></ul><h4 id="_3-autoencoder-自动编码器" tabindex="-1"><strong>(3) Autoencoder（自动编码器）</strong> <a class="header-anchor" href="#_3-autoencoder-自动编码器" aria-label="Permalink to &quot;**(3) Autoencoder（自动编码器）**&quot;">​</a></h4><ul><li>使用神经网络压缩数据，获取低维表示。</li></ul><hr><h2 id="总结" tabindex="-1"><strong>总结</strong> <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;**总结**&quot;">​</a></h2><table><thead><tr><th><strong>类别</strong></th><th><strong>方法</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><strong>特征创建</strong></td><td>统计特征、时间特征、交互特征、目标编码</td><td>计算均值、构造时间差、用户行为组合</td></tr><tr><td><strong>特征转换</strong></td><td>归一化、离散化、对数变换、多项式扩展</td><td>Min-Max 归一化、等频分箱、log(x) 变换</td></tr><tr><td><strong>特征编码</strong></td><td>One-Hot、Label Encoding、Word2Vec</td><td>颜色 → <code>[1,0,0]</code>，文本转换成词向量</td></tr><tr><td><strong>特征选择</strong></td><td>相关性分析、递归特征消除、L1 正则化</td><td>过滤冗余特征、决策树特征重要性</td></tr><tr><td><strong>降维</strong></td><td>PCA, t-SNE, Autoencoder</td><td>高维数据降维以提高计算效率</td></tr></tbody></table><p>特征工程是<strong>提升模型效果的关键</strong>，可以根据业务需求和数据特点选择合适的方法优化模型效果。</p>',47),i=[n];function l(d,s,g,c,h,u){return r(),o("div",null,i)}const x=t(a,[["render",l]]);export{m as __pageData,x as default};
