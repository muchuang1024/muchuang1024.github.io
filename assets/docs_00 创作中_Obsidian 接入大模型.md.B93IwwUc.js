import{_ as e,c as t,o as a,a4 as o}from"./chunks/framework.4aTu-Nia.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/00 创作中/Obsidian 接入大模型.md","filePath":"docs/00 创作中/Obsidian 接入大模型.md"}'),r={name:"docs/00 创作中/Obsidian 接入大模型.md"},n=o('<h2 id="一、text-generator" tabindex="-1">一、Text Generator <a class="header-anchor" href="#一、text-generator" aria-label="Permalink to &quot;一、Text Generator&quot;">​</a></h2><p>想要为我的文章自动续写改写及快速生成简介、关键词、大纲、标题，推荐 <strong>Obsidian Text Generator 插件</strong>，支持在 Obsidian 中直接调用 OpenAI、Anthropic、Claude、本地模型 Local LLM 等生成文本</p><h3 id="_1、安装-text-generator-插件" tabindex="-1">1、安装 Text Generator 插件 <a class="header-anchor" href="#_1、安装-text-generator-插件" aria-label="Permalink to &quot;1、安装 Text Generator 插件&quot;">​</a></h3><p>在 Obsidian 插件市场搜索 <code>Text Generator</code> → 安装并启用</p><h3 id="_2、配置-api-key" tabindex="-1">2、配置 API Key <a class="header-anchor" href="#_2、配置-api-key" aria-label="Permalink to &quot;2、配置 API Key&quot;">​</a></h3><p>根据使用的大模型，配置不同的 API Key，这里推荐硅基流动，可接入多种模型</p><p>登录后 <a href="https://cloud.siliconflow.cn/sft-h0yf1bynpp/account/ak" target="_blank" rel="noreferrer">https://cloud.siliconflow.cn/sft-h0yf1bynpp/account/ak</a></p><p>新建一个 API key，然后复制到 Obsidian 进行设置</p><p>Base Path: <a href="https://api.siliconflow.cn/v1" target="_blank" rel="noreferrer">https://api.siliconflow.cn/v1</a></p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250726235429.png" alt=""></p><h3 id="_3、安装-text-generator-模板包" tabindex="-1">3、安装 Text Generator 模板包 <a class="header-anchor" href="#_3、安装-text-generator-模板包" aria-label="Permalink to &quot;3、安装 Text Generator 模板包&quot;">​</a></h3><p>模板包内置了辅助写作相关命令，下载社区模板</p><p>Command + P （windows 使用 Ctrl + P) 输入 <code>Text generator: template packages manager</code>，我只选择了 <code>Default prompts package</code> （包含生成标题，根据内容生成标签，润色内容，简写，头脑风暴，总结）内容已经够日常使用, 安装后模版可在上面设置的 Prompts Templates Path 里找到并进行个性化修改。</p><p>「说明」：默认的模板生成内容是英文的，若希望生成文本为中文，模板的 name，description，prompt 位置需改为中文描述。</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250727095030.png" alt=""></p><h3 id="_4、-设置快捷键" tabindex="-1">4、 设置快捷键 <a class="header-anchor" href="#_4、-设置快捷键" aria-label="Permalink to &quot;4、 设置快捷键&quot;">​</a></h3><p>经过前面的设置，该工具就可以使用了。以生成标签为例</p><p>Command + P 调出 <code>Text Generator: Templates:Generate &amp; Insert</code> 回车调出工具，选择 「生成标签」即可</p><p>为了更方便地使用生成模板命令，可以<strong>设置模板快捷键</strong>。具体方法是：</p><p>点击「设置」-&gt;「快捷键」-&gt;在检索框里输入 <code>Text Generator</code> 进行个性化设置</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250727095740.png" alt=""></p><h3 id="_5、-使用" tabindex="-1">5、 使用 <a class="header-anchor" href="#_5、-使用" aria-label="Permalink to &quot;5、 使用&quot;">​</a></h3><h4 id="_1-快速生成内容" tabindex="-1">1）快速生成内容 <a class="header-anchor" href="#_1-快速生成内容" aria-label="Permalink to &quot;1）快速生成内容&quot;">​</a></h4><ul><li><strong>选中文本后调用 AI</strong>：选中一段文字 → 按快捷键 <code>Ctrl/Cmd + J</code> → AI 根据上下文续写/改写。</li></ul><h4 id="_2-ai-辅助编辑" tabindex="-1"><strong>(2) AI 辅助编辑</strong> <a class="header-anchor" href="#_2-ai-辅助编辑" aria-label="Permalink to &quot;**(2) AI 辅助编辑**&quot;">​</a></h4><table><thead><tr><th><strong>场景</strong></th><th><strong>操作步骤</strong></th></tr></thead><tbody><tr><td><strong>改写句子风格</strong></td><td>选中句子 → <code>Ctrl/Cmd + J</code> →输入 <code>/rewrite formal</code></td></tr><tr><td><strong>总结长段落</strong></td><td>选中段落 → <code>/summarize in bullet points</code></td></tr><tr><td><strong>生成文章大纲</strong></td><td>输入主题标题 → <code>T-Gen: Generate Text Here</code>（光标处自动生成）</td></tr></tbody></table><hr><h3 id="创建-api-key" tabindex="-1">创建 API Key <a class="header-anchor" href="#创建-api-key" aria-label="Permalink to &quot;创建 API Key&quot;">​</a></h3><p>打开 Google AI Studio <a href="https://aistudio.google.com/app/apikey?hl=zh-cn" target="_blank" rel="noreferrer">https://aistudio.google.com/app/apikey?hl=zh-cn</a> 登录，点击创建 API 秘钥</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250726230410.png" alt=""></p><p>各个大模型优缺点</p><ul><li>Text Generator允许使用和自定义提示模板，这些模板定义生成内容的结构和样式，模板文件一般保存在<code>textgenerator/prompts</code>目录下</li></ul><h2 id="copliot" tabindex="-1">Copliot <a class="header-anchor" href="#copliot" aria-label="Permalink to &quot;Copliot&quot;">​</a></h2><p><a href="https://openrouter.ai/settings/keys" target="_blank" rel="noreferrer">https://openrouter.ai/settings/keys</a></p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250726231738.png" alt=""></p><p>找到 Copilot 插件设置，修改 gemini-2.5-flash 对应的 api-key</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250726232131.png" alt=""></p><p>复制刚刚创建的 api-key</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250726232253.png" alt=""></p><p>关联文章向大模型提问</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20250726232504.png" alt=""></p><h2 id="custom-frames" tabindex="-1">## Custom Frames <a class="header-anchor" href="#custom-frames" aria-label="Permalink to &quot;## Custom Frames&quot;">​</a></h2><p>Perplexity</p><h2 id="kimi" tabindex="-1">Kimi <a class="header-anchor" href="#kimi" aria-label="Permalink to &quot;Kimi&quot;">​</a></h2>',44),i=[n];function s(c,p,l,h,d,m){return a(),t("div",null,i)}const b=e(r,[["render",s]]);export{u as __pageData,b as default};
