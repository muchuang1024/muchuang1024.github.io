import{_ as a,c as s,o as i,a4 as e}from"./chunks/framework.4aTu-Nia.js";const m=JSON.parse('{"title":"删除项目级别的 user. Email 配置","description":"","frontmatter":{},"headers":[],"relativePath":"docs/00 创作中/Git 不同项目 user 配置.md","filePath":"docs/00 创作中/Git 不同项目 user 配置.md"}'),t={name:"docs/00 创作中/Git 不同项目 user 配置.md"},n=e(`<h2 id="git-配置优先级" tabindex="-1">Git 配置优先级 <a class="header-anchor" href="#git-配置优先级" aria-label="Permalink to &quot;Git 配置优先级&quot;">​</a></h2><p>Git 配置有三个级别，优先级从高到低：</p><ol><li><strong>项目级别</strong>（local）：<code>.git/config</code> - 优先级最高</li><li><strong>用户级别</strong>（global）：<code>~/.gitconfig</code></li><li><strong>系统级别</strong>（system）：<code>/etc/gitconfig</code> - 优先级最低</li></ol><p><strong>关键点</strong>：项目级别的配置会覆盖全局配置，包括 <code>includeIf</code> 的规则。</p><p>Cd /path/to/that/project</p><h1 id="删除项目级别的-user-email-配置" tabindex="-1">删除项目级别的 user. Email 配置 <a class="header-anchor" href="#删除项目级别的-user-email-配置" aria-label="Permalink to &quot;删除项目级别的 user. Email 配置&quot;">​</a></h1><p>Git config --local --unset user. Email</p><h1 id="删除项目级别的-user-name-配置-如果有" tabindex="-1">删除项目级别的 user. Name 配置（如果有） <a class="header-anchor" href="#删除项目级别的-user-name-配置-如果有" aria-label="Permalink to &quot;删除项目级别的 user. Name 配置（如果有）&quot;">​</a></h1><p>Git config --local --unset user. Name</p><h1 id="验证-现在应该显示全局或-includeif-的配置" tabindex="-1">验证，现在应该显示全局或 includeIf 的配置 <a class="header-anchor" href="#验证-现在应该显示全局或-includeif-的配置" aria-label="Permalink to &quot;验证，现在应该显示全局或 includeIf 的配置&quot;">​</a></h1><p>Git config user. Email</p><h3 id="查看完整配置层级" tabindex="-1">查看完整配置层级 <a class="header-anchor" href="#查看完整配置层级" aria-label="Permalink to &quot;查看完整配置层级&quot;">​</a></h3><p>bash</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看所有配置及其来源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --show-origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span></span></code></pre></div><p>输出示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>file:/Users/caijinlin/.gitconfig    user.name=muchuang</span></span>
<span class="line"><span>file:/Users/caijinlin/.gitconfig    user.email=1399534656@qq.com</span></span>
<span class="line"><span>file:.git/config                     user.email=wrong@example.com  # 这行说明项目有本地配置</span></span></code></pre></div>`,16),l=[n];function o(r,c,p,h,d,u){return i(),s("div",null,l)}const k=a(t,[["render",o]]);export{m as __pageData,k as default};
