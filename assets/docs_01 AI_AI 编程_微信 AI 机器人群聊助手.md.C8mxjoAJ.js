import{_ as a,c as s,o as n,a4 as p}from"./chunks/framework.4aTu-Nia.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/01 AI/AI 编程/微信 AI 机器人群聊助手.md","filePath":"docs/01 AI/AI 编程/微信 AI 机器人群聊助手.md"}'),t={name:"docs/01 AI/AI 编程/微信 AI 机器人群聊助手.md"},e=p(`<p>微信 AI 机器人是一种利用人工智能技术，为用户提供服务的自动化系统。它通常具备自然语言处理能力，能够理解用户的文本或语音输入，并给出相应的回复或执行特定的任务。</p><p>在微信这个庞大的社交平台上，AI 机器人能够提供 24 小时的实时服务，无论何时何地，用户都能获得即时的信息反馈和帮助。其次，AI 机器人的智能问答能力能够快速准确地解答用户的疑问，节省了用户搜索信息的时间，提高了效率，并且还可以帮助管理社群，提高社群的活跃度</p><p>本文将提供本地可运行并且免费的微信 AI 机器人群聊助手搭建教程，将一个普通的微信账号转变为一个能够进行自然语言交互、回答问题、提供信息甚至执行任务的智能机器人</p><h2 id="一、效果展示" tabindex="-1">一、效果展示 <a class="header-anchor" href="#一、效果展示" aria-label="Permalink to &quot;一、效果展示&quot;">​</a></h2><h3 id="_1、私聊对话" tabindex="-1">1、私聊对话 <a class="header-anchor" href="#_1、私聊对话" aria-label="Permalink to &quot;1、私聊对话&quot;">​</a></h3><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240511081602.png" alt=""></p><h3 id="_2、群聊对话" tabindex="-1">2、群聊对话 <a class="header-anchor" href="#_2、群聊对话" aria-label="Permalink to &quot;2、群聊对话&quot;">​</a></h3><p>机器人的人设</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213152.png" alt=""></p><p>查找天气</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213236.png" alt=""></p><p>查找新闻</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510213321.png" alt=""></p><h3 id="_3、新人欢迎" tabindex="-1">3、新人欢迎 <a class="header-anchor" href="#_3、新人欢迎" aria-label="Permalink to &quot;3、新人欢迎&quot;">​</a></h3><p>新人近群后，机器人会自动欢迎新成员</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240511081358.png" alt=""></p><h2 id="二、准备大模型账号" tabindex="-1">二、准备大模型账号 <a class="header-anchor" href="#二、准备大模型账号" aria-label="Permalink to &quot;二、准备大模型账号&quot;">​</a></h2><p>本文演示的 AI 机器人使用的是讯飞大模型（你也可以使用其它大模型，申请相应的 api_key 即可），讯飞大模型相比其它模型的优点是免费，注册即赠送 200万 Token。</p><h3 id="_1、注册账号" tabindex="-1">1、注册账号 <a class="header-anchor" href="#_1、注册账号" aria-label="Permalink to &quot;1、注册账号&quot;">​</a></h3><p>打开链接 <a href="https://xinghuo.xfyun.cn/sparkapi?scr=price" target="_blank" rel="noreferrer">https://xinghuo.xfyun.cn/sparkapi?scr=price</a> 点击免费试用即可，建议选择个人免费包</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510215430.png" alt=""></p><h3 id="_2、认证" tabindex="-1">2、认证 <a class="header-anchor" href="#_2、认证" aria-label="Permalink to &quot;2、认证&quot;">​</a></h3><p>未认证用户无法调用大模型接口，填写相关信息，几分钟就可以完成个人实名认证了，这是我见过最快的实名认证了</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220404.png" alt=""></p><h3 id="_3、创建应用" tabindex="-1">3、创建应用 <a class="header-anchor" href="#_3、创建应用" aria-label="Permalink to &quot;3、创建应用&quot;">​</a></h3><p>填写应用名称、分类、描述创建应用</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220543.png" alt=""></p><p>创建应用后，会得到服务接口认证相关信息，这 3 个参数在后面的服务配置中需要使用</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220731.png" alt=""></p><h3 id="_4、领取-token" tabindex="-1">4、领取 token <a class="header-anchor" href="#_4、领取-token" aria-label="Permalink to &quot;4、领取 token&quot;">​</a></h3><p>1、左侧选择 v3.5 模型，然后点击立即购买</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510221145.png" alt=""></p><p>2、选择上面创建的应用和免费套餐</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510221056.png" alt=""></p><p>3、下单</p><p>下单成功后回到 token 数量页面，这时候可以看到 剩余 token 数量已经加上了</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510220922.png" alt=""></p><h2 id="三、服务搭建" tabindex="-1">三、服务搭建 <a class="header-anchor" href="#三、服务搭建" aria-label="Permalink to &quot;三、服务搭建&quot;">​</a></h2><p>可以在自己的本地部署，也可以购买一个服务器，部署在服务器上</p><p>提前准备一个绑定了银行卡的微信，不然的话扫码登录无效</p><h3 id="_1、环境安装" tabindex="-1">1、环境安装 <a class="header-anchor" href="#_1、环境安装" aria-label="Permalink to &quot;1、环境安装&quot;">​</a></h3><p>安装 python3</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>本项目需要使用 python 运行，建议安装 python3，按照官方教程安装即可</span></span></code></pre></div><p>使用 Git 下载官方项目代码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git clone https://github.com/zhayujie/chatgpt-on-wechat.git</span></span></code></pre></div><p>进入项目目录</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cd chatgpt-on-wechat</span></span></code></pre></div><p>安装依赖</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>pip3 install -r requirements.txt</span></span>
<span class="line"><span>pip3 install -r requirements-optional.txt</span></span></code></pre></div><h3 id="_2、服务配置" tabindex="-1">2、服务配置 <a class="header-anchor" href="#_2、服务配置" aria-label="Permalink to &quot;2、服务配置&quot;">​</a></h3><p>1）配置文件的模板在根目录的<code>config-template.json</code>中，需复制该模板创建最终生效的 <code>config.json</code> 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cp config-template.json config.json</span></span></code></pre></div><p>2）<code>config.json</code> 关键配置说明</p><p>使用的模型</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;model&quot;: &quot;gpt-3.5-turbo&quot;  # 使用的模型，支持 gpt-3.5-turbo, gpt-4, gpt-4-turbo, wenxin, xunfei, glm-4, claude-3-haiku, moonshot</span></span></code></pre></div><p>私聊对话</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;single_chat_prefix&quot;: [&quot;bot&quot;,&quot;@bot&quot;] # 个人聊天中只要以&quot;bot&quot;或&quot;@bot&quot; 为开头的内容就会触发机器人</span></span>
<span class="line"><span>&quot;single_chat_reply_prefix&quot;: &quot;[bot] &quot; # 个人聊天中回复的内容会以 &quot;[bot] &quot; 作为前缀， 以区分真人</span></span></code></pre></div><p>群聊对话</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;group_chat_prefix&quot;: &quot;@bot&quot; # 群聊天中只要检测到以 &quot;@bot&quot; 开头的内容，就会触发机器人回复</span></span>
<span class="line"><span>&quot;group_name_white_list&quot;: &quot;[&quot;AI 机器人测试&quot;, &quot;AI 机器人测试02&quot;]&quot; # 生效的群聊，如果想对所有群聊生效，可以直接填写 \`&quot;group_name_white_list&quot;: [&quot;ALL_GROUP&quot;]\`</span></span>
<span class="line"><span>&quot;group_welcome_msg&quot;: &quot;&quot;,  # 配置新人进群固定欢迎语，不配置则使用随机风格欢迎</span></span></code></pre></div><p>如果采用的是 gpt 模型，需要配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>open_ai_api_key</span></span></code></pre></div><p>如果采用的是讯飞模型，需要配置</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;xunfei_app_id&quot;: &quot;&quot;,</span></span>
<span class="line"><span>&quot;xunfei_api_secret&quot;: &quot;&quot;,</span></span>
<span class="line"><span>&quot;xunfei_api_key&quot;: &quot;&quot;</span></span></code></pre></div><p>所有配置：<a href="https://github.com/zhayujie/chatgpt-on-wechat/blob/master/config.py#L12" target="_blank" rel="noreferrer">https://github.com/zhayujie/chatgpt-on-wechat/blob/master/config.py#L12</a></p><p>3）<code>config.json</code> 配置如下</p><p>机器人自动回复触发设置需要替换下面的 single_chat_prefix、 single_chat_reply_prefix、group_chat_prefix、group_name_white_list</p><p>本文使用的模型是讯飞，需要替换 xunfei_app_id、xunfei_api_secret、xunfei_api_key</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;channel_type&quot;: &quot;wx&quot;,</span></span>
<span class="line"><span>  &quot;model&quot;: &quot;xunfei&quot;,</span></span>
<span class="line"><span>  &quot;open_ai_api_key&quot;: &quot;YOUR API KEY&quot;,</span></span>
<span class="line"><span>  &quot;claude_api_key&quot;: &quot;YOUR API KEY&quot;,</span></span>
<span class="line"><span>  &quot;text_to_image&quot;: &quot;dall-e-2&quot;,</span></span>
<span class="line"><span>  &quot;voice_to_text&quot;: &quot;openai&quot;,</span></span>
<span class="line"><span>  &quot;text_to_voice&quot;: &quot;openai&quot;,</span></span>
<span class="line"><span>  &quot;proxy&quot;: &quot;&quot;,</span></span>
<span class="line"><span>  &quot;hot_reload&quot;: false,</span></span>
<span class="line"><span>  &quot;single_chat_prefix&quot;: [</span></span>
<span class="line"><span>    &quot;机器人&quot;,</span></span>
<span class="line"><span>    &quot;@机器人&quot;</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  &quot;single_chat_reply_prefix&quot;: &quot;[机器人] &quot;,</span></span>
<span class="line"><span>  &quot;group_chat_prefix&quot;: [</span></span>
<span class="line"><span>    &quot;@机器人&quot;</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  &quot;group_name_white_list&quot;: [</span></span>
<span class="line"><span>    &quot;AI 机器人测试&quot;</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  &quot;image_create_prefix&quot;: [</span></span>
<span class="line"><span>    &quot;画&quot;</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  &quot;speech_recognition&quot;: true,</span></span>
<span class="line"><span>  &quot;group_speech_recognition&quot;: false,</span></span>
<span class="line"><span>  &quot;voice_reply_voice&quot;: false,</span></span>
<span class="line"><span>  &quot;conversation_max_tokens&quot;: 2500,</span></span>
<span class="line"><span>  &quot;expires_in_seconds&quot;: 3600,</span></span>
<span class="line"><span>  &quot;group_welcome_msg&quot;: &quot;欢迎新成员加入我们的群！请查阅群公告遵守群规，积极互动。&quot;,</span></span>
<span class="line"><span>  &quot;character_desc&quot;: &quot;你是基于大语言模型的AI智能助手，旨在回答并解决人们的任何问题，并且可以使用多种语言与人交流。&quot;,</span></span>
<span class="line"><span>  &quot;temperature&quot;: 0.7,</span></span>
<span class="line"><span>  &quot;subscribe_msg&quot;: &quot;感谢您的关注！\\n这里是AI智能助手，可以自由对话。\\n支持语音对话。\\n支持图片输入。\\n支持图片输出，画字开头的消息将按要求创作图片。\\n支持tool、角色扮演和文字冒险等丰富的插件。\\n输入{trigger_prefix}#help 查看详细指令。&quot;,</span></span>
<span class="line"><span>  &quot;use_linkai&quot;: false,</span></span>
<span class="line"><span>  &quot;linkai_api_key&quot;: &quot;&quot;,</span></span>
<span class="line"><span>  &quot;linkai_app_code&quot;: &quot;&quot;,</span></span>
<span class="line"><span>  &quot;xunfei_app_id&quot;: &quot;28c42e5d&quot;,</span></span>
<span class="line"><span>  &quot;xunfei_api_secret&quot;: &quot;NjVhYWUxMGRlZTE3MjNmODljMWIxZGjj&quot;,</span></span>
<span class="line"><span>  &quot;xunfei_api_key&quot;: &quot;ac721c47249e533d06c40a2e56a6ac56&quot;,</span></span>
<span class="line"><span>  &quot;debug&quot;:true</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="_3、启动服务" tabindex="-1">3、启动服务 <a class="header-anchor" href="#_3、启动服务" aria-label="Permalink to &quot;3、启动服务&quot;">​</a></h3><p>以后台运行的方式启动服务并且查看日志</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nohup python3 app.py &amp; tail -f nohup.out</span></span></code></pre></div><p>在日志中看到微信二维码，使用需要充当机器人的微信扫码登录，用于扫码登录的账号就会变身为机器人，让你的好友给你发消息或在群聊@你都会触发机器人自动回复，效果就如本文开头所示，并且机器人回复的消息会在日志中展示</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20240510225157.png" alt=""></p><h2 id="四、总结" tabindex="-1">四、总结 <a class="header-anchor" href="#四、总结" aria-label="Permalink to &quot;四、总结&quot;">​</a></h2><p>本文我们详细介绍了如何利用讯飞大模型创建了一个本地就可以运行的微信 AI 机器人，用于提供 24 小时服务，实现智能问答和社群管理。文章详细介绍了从注册讯飞大模型账号、创建应用、领取token，到搭建服务环境、配置服务、启动服务的整个过程。</p><p>文章的主要步骤包括：</p><p>1、<strong>效果展示</strong>：通过截图展示微信 AI 机器人在私聊和群聊中的对话效果，以及新人欢迎功能。</p><p>2、 <strong>准备大模型账号</strong>：介绍了如何注册讯飞大模型账号，进行认证，创建应用，并领取 token。</p><p>3、<strong>服务搭建</strong>：详细说明了搭建环境、安装依赖、配置文件，以及如何设置私聊和群聊的自动回复触发条件。</p><p>4、<strong>启动服务</strong>：介绍了如何启动服务，并展示了如何通过微信扫码登录，将账号转变为AI机器人。</p><p>将一个普通的微信账号转变为一个智能化的 AI 机器人，以提升用户体验和社群活跃度</p>`,81),o=[e];function i(l,c,u,h,r,g){return n(),s("div",null,o)}const _=a(t,[["render",i]]);export{d as __pageData,_ as default};
