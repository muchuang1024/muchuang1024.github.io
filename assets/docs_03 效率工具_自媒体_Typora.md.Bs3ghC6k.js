import{_ as a,c as e,o as t,a4 as n}from"./chunks/framework.4aTu-Nia.js";const u=JSON.parse('{"title":"Typora","description":"","frontmatter":{},"headers":[],"relativePath":"docs/03 效率工具/自媒体/Typora.md","filePath":"docs/03 效率工具/自媒体/Typora.md"}'),o={name:"docs/03 效率工具/自媒体/Typora.md"},i=n(`<h1 id="typora" tabindex="-1">Typora <a class="header-anchor" href="#typora" aria-label="Permalink to &quot;Typora&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>写完一篇文章发布到各平台，往往需要把文章中的图片重新上传到对应平台以及排版，整个过程比较耗时耗力。为减少这些不必要的重复操作，本文使用如下工具，实现一键上传图片与排版，一劳永逸。</p><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/image-20210116203519463.png" alt=""></p><p>通过 <strong>Typora</strong> 编辑文档，配置使用 <strong>PicGo</strong> 将图片上传至 Github ，将写完的文章（<strong>Markdown</strong> 格式）复制到 <strong>Mdnice</strong> 网址，选择主题即可一键排版。用这个流程写文章，基本上可以做到写完即可发布，不用再单独排版，也不用在微信公众号后台重新上传图片，下文有动图展示。</p><h2 id="markdown" tabindex="-1">Markdown <a class="header-anchor" href="#markdown" aria-label="Permalink to &quot;Markdown&quot;">​</a></h2><blockquote><p>双手不离开键盘即可排版的语言</p></blockquote><p>markdown 用法自行谷歌，本文不做过多阐述</p><h2 id="typora-1" tabindex="-1">Typora <a class="header-anchor" href="#typora-1" aria-label="Permalink to &quot;Typora&quot;">​</a></h2><blockquote><p>所见即所得的markdown编辑器</p></blockquote><p>直达 <a href="https://www.typora.io/#download%EF%BC%8C%E8%87%AA%E8%A1%8C%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%EF%BC%8C%E5%8A%A8%E5%9B%BE%E6%84%9F%E5%8F%97%E4%B8%8B" target="_blank" rel="noreferrer">https://www.typora.io/#download，自行下载安装，动图感受下</a> Typora 的魅力，正文编辑完文字，左侧大纲和展示效果立即更新，做到了真正的所见即所得的效果，并且还支持一键复制粘贴图片（需配置图片上传，下文有教程）</p><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/typora.gif" alt=""></p><h2 id="图床配置" tabindex="-1">图床配置 <a class="header-anchor" href="#图床配置" aria-label="Permalink to &quot;图床配置&quot;">​</a></h2><blockquote><p>一键上传图片至 Github 仓库，通过 jsDelivr 免费CDN访问图片</p></blockquote><h3 id="_1-新建-github-仓库" tabindex="-1">1. 新建 Github 仓库 <a class="header-anchor" href="#_1-新建-github-仓库" aria-label="Permalink to &quot;1. 新建 Github 仓库&quot;">​</a></h3><p>创建一个仓库，用来存放图片，比如我创建了imgcdn这个仓库</p><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/imgcdn.png" alt=""></p><h3 id="_2-github-生成-token" tabindex="-1">2. Github 生成 Token <a class="header-anchor" href="#_2-github-生成-token" aria-label="Permalink to &quot;2. Github 生成 Token&quot;">​</a></h3><p>授权仓库的操作权限，通过API实现自动化上传</p><p>打开 <a href="https://github.com/settings/tokens/new%EF%BC%8C%E5%A1%AB%E5%86%99" target="_blank" rel="noreferrer">https://github.com/settings/tokens/new，填写</a> <code>Token</code> 描述，勾选 repo、write、read 然后点击 <code>Generate token</code> 生成一个 <code>Token</code> 并保存</p><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/github_token.png" alt=""></p><h3 id="_3-picgo-图床搭建" tabindex="-1">3. PicGo 图床搭建 <a class="header-anchor" href="#_3-picgo-图床搭建" aria-label="Permalink to &quot;3. PicGo 图床搭建&quot;">​</a></h3><p>打开 <a href="https://github.com/Molunerfinn/picgo/releases%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85" target="_blank" rel="noreferrer">https://github.com/Molunerfinn/picgo/releases，下载安装</a> PicGo ，安装好后开始配置 Github 图床</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>仓库名: 上面创建的存储图片的仓库</span></span>
<span class="line"><span>分支名: master</span></span>
<span class="line"><span>Token: 粘贴之前叫你保存的 Token</span></span>
<span class="line"><span>自定义域名: https://cdn.jsdelivr.net/gh/用户名/仓库名 </span></span>
<span class="line"><span></span></span>
<span class="line"><span>(注：jsDelivr 是一个免费、开源的加速CDN公共服务，可以访问 github 仓库中的资源)</span></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/picgo_settings.png" alt=""></p><h3 id="_4-typora-图片上传配置" tabindex="-1">4. Typora 图片上传配置 <a class="header-anchor" href="#_4-typora-图片上传配置" aria-label="Permalink to &quot;4. Typora 图片上传配置&quot;">​</a></h3><p>点击 Typora -&gt; 偏好设置 -&gt; 图片，按照下图标红的地方配置，点击验证图片上传选项检查配置是否无误，配置无误后使用 Typora 编辑文档时，复制粘贴图片时就会自动上传到 github</p><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/image-20210113230229310.png" alt=""></p><h2 id="mdnice" tabindex="-1">Mdnice <a class="header-anchor" href="#mdnice" aria-label="Permalink to &quot;Mdnice&quot;">​</a></h2><blockquote><p>markdown 排版利器</p></blockquote><p>使用 <a href="https://www.mdnice.com/" target="_blank" rel="noreferrer">https://www.mdnice.com/</a> 一键排版，并复制到公众号后台，不需要重新上传图片及调整，即可直接发布</p><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/mdnice.gif" alt=""></p><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>全文流程如下，首次使用需要安装与配置软件，后续写文章只需要第 3, 4, 5 步即可</p><p><img src="https://cdn.jsdelivr.net/gh/caijinlin/imgcdn/image-20210116201029781.png" alt=""></p>`,35),r=[i];function s(p,c,l,h,d,g){return t(),e("div",null,r)}const b=a(o,[["render",s]]);export{u as __pageData,b as default};
