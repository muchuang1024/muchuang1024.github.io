import{_ as t,c as s,o as a,a4 as e}from"./chunks/framework.4aTu-Nia.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/02 技术/运筹优化/运筹优化/子回路.md","filePath":"docs/02 技术/运筹优化/运筹优化/子回路.md"}'),i={name:"docs/02 技术/运筹优化/运筹优化/子回路.md"},n=e(`<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Visit from city 0 to city 2 with value: 1.0</span></span>
<span class="line"><span>Visit from city 1 to city 3 with value: 1.0</span></span>
<span class="line"><span>Visit from city 2 to city 0 with value: 1.0</span></span>
<span class="line"><span>Visit from city 3 to city 1 with value: 1.0</span></span></code></pre></div><p>这种情况实际上就是 <strong>子回路</strong> 的典型表现。在这里，路径被分成了两个独立的回路：</p><ul><li>子回路 1：<code>0 -&gt; 2 -&gt; 0</code></li><li>子回路 2：<code>1 -&gt; 3 -&gt; 1</code></li></ul><p>旅行商问题（TSP 或 OTSP）的基本要求，即路径必须覆盖所有城市，并且每个城市仅被访问一次，而不能形成多个小回路</p>`,4),o=[n];function c(p,l,_,d,r,h){return a(),s("div",null,o)}const g=t(i,[["render",c]]);export{m as __pageData,g as default};
