import{_ as a,c as r,o as t,a4 as e}from"./chunks/framework.4aTu-Nia.js";const u=JSON.parse('{"title":"一、VRP 及其变种","description":"","frontmatter":{},"headers":[],"relativePath":"docs/00 创作中/运筹优化/运筹问题.md","filePath":"docs/00 创作中/运筹优化/运筹问题.md"}'),i={name:"docs/00 创作中/运筹优化/运筹问题.md"},l=e(`<p>问题分类：<a href="https://neos-guide.org/guide/types/#nonconvex" target="_blank" rel="noreferrer">https://neos-guide.org/guide/types/#nonconvex</a></p><h1 id="一、vrp-及其变种" tabindex="-1">一、VRP 及其变种 <a class="header-anchor" href="#一、vrp-及其变种" aria-label="Permalink to &quot;一、VRP 及其变种&quot;">​</a></h1><h2 id="vrp-问题" tabindex="-1">VRP 问题 <a class="header-anchor" href="#vrp-问题" aria-label="Permalink to &quot;VRP 问题&quot;">​</a></h2><p>车辆路径优化问题（Vehicle Routing Problem, VRP）是指有一个配送中心、若干个客户点和一定数量的车辆，目标是通过规划车辆路径来最小化配送成本。</p><p><a href="http://neo.lcc.uma.es/vrp/vehicle-routing-problem/" target="_blank" rel="noreferrer">http://neo.lcc.uma.es/vrp/vehicle-routing-problem/</a></p><p><strong>问题特点：</strong></p><ul><li>单一目标（如最小化路径总长度）。</li><li>无复杂约束，车辆容量、时间等因素未考虑。</li></ul><p>下图为生成车辆数为3时总距离最小的路线</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20241229204539.png" alt=""></p><p>车辆路径规划问题在物流领域和生产领域的应用非常广泛。在实际应用中也出现了一些在标准问题的基础上增加了某些变化之后的变型问题。</p><h2 id="cvrp-问题" tabindex="-1">CVRP 问题 <a class="header-anchor" href="#cvrp-问题" aria-label="Permalink to &quot;CVRP 问题&quot;">​</a></h2><p>Capacitated Vehicle Routing Problem：每辆车有固定的载重量，不能超过其最大容量。限制配送车辆的承载体积、重量等。</p><ul><li><strong>问题描述</strong>：每辆车有固定的载重量，不能超过其最大容量。</li><li><strong>挑战</strong>：需要同时考虑路径优化和车辆容量限制。</li><li><strong>应用场景</strong>：快递公司配送货物。</li></ul><h2 id="vrptw-问题" tabindex="-1">VRPTW 问题 <a class="header-anchor" href="#vrptw-问题" aria-label="Permalink to &quot;VRPTW 问题&quot;">​</a></h2><p>VRP with Time Windows：每个客户有固定的服务时间窗口（如 9:00-11:00），车辆必须在指定时间内到达。</p><ul><li><strong>问题描述</strong>：车辆必须在指定时间内到达。</li><li><strong>挑战</strong>： <ul><li>时间约束显著增加问题复杂性。</li><li>需要动态调整路径以满足时间窗口。</li></ul></li><li><strong>应用场景</strong>：生鲜配送（如 Dingdong Maicai）、医疗服务。</li></ul><h2 id="mdvrp-问题" tabindex="-1">MDVRP 问题 <a class="header-anchor" href="#mdvrp-问题" aria-label="Permalink to &quot;MDVRP  问题&quot;">​</a></h2><p>Multi-Depot VRP：配送网络中有多个配送中心（仓库），车辆可以从任意一个配送中心出发。</p><ul><li><strong>问题描述</strong>：配送网络中有多个配送中心（仓库），车辆可以从任意一个配送中心出发。</li><li><strong>挑战</strong>：需要优化配送中心选择与路径规划的综合问题。</li><li><strong>应用场景</strong>：连锁仓储配送系统。</li></ul><h2 id="ovrp-问题" tabindex="-1">OVRP 问题 <a class="header-anchor" href="#ovrp-问题" aria-label="Permalink to &quot;OVRP  问题&quot;">​</a></h2><ul><li><strong>问题描述</strong>：车辆无需返回出发点。</li><li><strong>挑战</strong>：规划时无法利用车辆返回时的路径简化问题。</li><li><strong>应用场景</strong>：垃圾收集、邮政投递。</li></ul><h2 id="svrp-问题" tabindex="-1">SVRP 问题 <a class="header-anchor" href="#svrp-问题" aria-label="Permalink to &quot;SVRP  问题&quot;">​</a></h2><p>Stochastic Vehicle Routing Problem (SVRP)</p><ul><li><strong>问题描述</strong>：某些信息具有不确定性，例如客户需求、订单数量或交通状况。</li><li><strong>挑战</strong>： <ul><li>需要在不确定性下找到鲁棒的路径规划方案。</li><li>常结合概率模型或仿真优化。</li></ul></li><li><strong>应用场景</strong>：应对突发事件的应急物流。</li></ul><h2 id="sdvrp-问题" tabindex="-1">SDVRP 问题 <a class="header-anchor" href="#sdvrp-问题" aria-label="Permalink to &quot;SDVRP 问题&quot;">​</a></h2><p>Split Delivery Vehicle Routing Problem (SDVRP)</p><ul><li><strong>问题描述</strong>：客户需求可以由多辆车分开配送。</li><li><strong>挑战</strong>： <ul><li>需要分配客户需求给多辆车，同时优化路径。</li></ul></li><li><strong>应用场景</strong>：大宗商品配送（如超市供货）。</li></ul><h2 id="pdp-问题" tabindex="-1">PDP 问题 <a class="header-anchor" href="#pdp-问题" aria-label="Permalink to &quot;PDP  问题&quot;">​</a></h2><p>Pickup and Delivery Problem (PDP)：</p><ul><li><strong>问题描述</strong>：需要从某个地点提货并送到指定地点。</li><li><strong>挑战</strong>： <ul><li>需考虑路径的前后顺序（先提货后送达）。</li><li>车辆的容量限制和时间约束可能增加问题复杂度。</li></ul></li><li><strong>应用场景</strong>：快递收发、共享汽车调度。</li></ul><p>美团配送对实时性要求极高，是秒级的即时调度问题，但对最优性的要求不高/弱于物流场景</p><p>调度问题被分解为骑手路径优化和订单分配方案的优化。骑手路径优化问题要解决的是在新订单分配至骑手后，确定骑手的最佳配送线路；而订单分配优化是把一批订单分配至相应的骑手，使得我们关注的指标最优。两者的关系是：订单分配优化算法进行初始的订单分配，然后路径优化算法获取各骑手的最佳行驶路线，订单分配优化算法根据骑手路径优化结果调整分配方案，这两个层次不断反复迭代。</p><p><img src="https://muchuang-img.oss-cn-beijing.aliyuncs.com/20241229211623.png" alt=""></p><table><thead><tr><th>工业界问题</th><th>地图导航</th><th><a href="https://blog.csdn.net/c9Yv2cf9I06K2A9E/article/details/130857950" target="_blank" rel="noreferrer">司乘匹配</a></th><th>运输问题</th><th>调度问题</th></tr></thead><tbody><tr><td>问题描述</td><td>给出从单个供给点（起点）到单个需求点（终点）的最优路径</td><td>在多个<strong>供给点</strong>（司机）和多个<strong>需求点</strong>（乘客）中结合时间、体验、服务、价值等因素，进行全局司机和乘客的匹配</td><td>寻找从单个<strong>供给点</strong>（CDC/RDC）多个<strong>需求点</strong>最优车辆分配和配送顺序</td><td>寻找从多个供给点到多个需求点的装卸匹配、车辆分配、装卸顺序</td></tr><tr><td>设计优化决策</td><td>路径优化</td><td>匹配</td><td>车辆分配+路径优化</td><td>供需匹配+车辆分配+路径优化</td></tr><tr><td>数学模型</td><td>shortest path</td><td>assignment/online assignment</td><td>VRP、匈牙利算法求解（多项式时间）</td><td>PDP</td></tr></tbody></table><p>为什么不能用利用运输问题求解调度？我们可以想象在用运输问题模型求解为连线后，需要继续解决的问题</p><pre><code>- 一个冗余缺口连线如何和载具进行匹配？
    
- 如果连线量大于载具容量，如何拆分？
    
- 如果连线量小于载具容量，如何合并？
    
- 多个任务如何指派给同一个T0？
    
- 有没有可能连线无法被履约（连线过远，没有足够的载具可以履约）？
</code></pre><p>可以看到后续问题本身就是一个典型的pickiup and delivery（PDP） 问题，只不过先解决运输问题，缩小了PDP的搜索范围，反倒使得按这个流程无法取得最优解。</p><h1 id="二、数学规划" tabindex="-1">二、数学规划 <a class="header-anchor" href="#二、数学规划" aria-label="Permalink to &quot;二、数学规划&quot;">​</a></h1><h2 id="线性规划-linear-programming-lp" tabindex="-1">线性规划（linear programming，LP） <a class="header-anchor" href="#线性规划-linear-programming-lp" aria-label="Permalink to &quot;线性规划（linear programming，LP）&quot;">​</a></h2><h2 id="整数规划-integer-linear-programming-ilp" tabindex="-1">整数规划（integer linear programming, ILP ） <a class="header-anchor" href="#整数规划-integer-linear-programming-ilp" aria-label="Permalink to &quot;整数规划（integer linear programming, ILP ）&quot;">​</a></h2><h2 id="混合整数规划-mixed-integer-linear-programming-milp" tabindex="-1">混合整数规划（mixed integer linear programming, MILP） <a class="header-anchor" href="#混合整数规划-mixed-integer-linear-programming-milp" aria-label="Permalink to &quot;混合整数规划（mixed integer linear programming, MILP）&quot;">​</a></h2><h2 id="动态规划-dynamic-programming-dp" tabindex="-1">动态规划（dynamic programming，DP） <a class="header-anchor" href="#动态规划-dynamic-programming-dp" aria-label="Permalink to &quot;动态规划（dynamic programming，DP）&quot;">​</a></h2><h2 id="多目标规划-multi-objective-programming-mop" tabindex="-1">多目标规划（multi objective programming，MOP） <a class="header-anchor" href="#多目标规划-multi-objective-programming-mop" aria-label="Permalink to &quot;多目标规划（multi objective programming，MOP）&quot;">​</a></h2><h1 id="三、组合优化" tabindex="-1">三、组合优化 <a class="header-anchor" href="#三、组合优化" aria-label="Permalink to &quot;三、组合优化&quot;">​</a></h1><h2 id="调度问题" tabindex="-1">调度问题 <a class="header-anchor" href="#调度问题" aria-label="Permalink to &quot;调度问题&quot;">​</a></h2><h2 id="划分问题" tabindex="-1">划分问题 <a class="header-anchor" href="#划分问题" aria-label="Permalink to &quot;划分问题&quot;">​</a></h2><h2 id="布局问题" tabindex="-1">布局问题 <a class="header-anchor" href="#布局问题" aria-label="Permalink to &quot;布局问题&quot;">​</a></h2><h2 id="路径规划问题" tabindex="-1">路径规划问题 <a class="header-anchor" href="#路径规划问题" aria-label="Permalink to &quot;路径规划问题&quot;">​</a></h2><h2 id="排班-排程问题" tabindex="-1">排班/排程问题 <a class="header-anchor" href="#排班-排程问题" aria-label="Permalink to &quot;排班/排程问题&quot;">​</a></h2><h1 id="三、随机优化" tabindex="-1">三、随机优化 <a class="header-anchor" href="#三、随机优化" aria-label="Permalink to &quot;三、随机优化&quot;">​</a></h1><h2 id="对策论" tabindex="-1">对策论 <a class="header-anchor" href="#对策论" aria-label="Permalink to &quot;对策论&quot;">​</a></h2><h2 id="排列论" tabindex="-1">排列论 <a class="header-anchor" href="#排列论" aria-label="Permalink to &quot;排列论&quot;">​</a></h2><h2 id="库存论" tabindex="-1">库存论 <a class="header-anchor" href="#库存论" aria-label="Permalink to &quot;库存论&quot;">​</a></h2>`,53),o=[l];function n(h,s,d,g,p,c){return t(),r("div",null,o)}const P=a(i,[["render",n]]);export{u as __pageData,P as default};
